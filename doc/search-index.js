var searchIndex = JSON.parse('{\
"jay_lib":{"doc":"The lib for me to help remember in use of function and …","t":"AAHHHFAAAAFFFFFFFFFFFFFFFFFFFFFF","n":["config","fns","DATA_FROM","DATA_TIDY","DB_LOCATION","set_conf","fn_db","fn_io","fn_net","fn_str","c_db","sql_execute","sql_execute_batch","f_string","get_file_date_name","get_file_time_name","s_f","v_f","get_ip","capitalize","capitalize_first","check_word","check_zh","del_mid_str","first_word","g_str_v","get_mid_str","is_number","last_word","u8_chars","u_str","v8_string"],"q":[[0,"jay_lib"],[2,"jay_lib::config"],[6,"jay_lib::fns"],[10,"jay_lib::fns::fn_db"],[13,"jay_lib::fns::fn_io"],[18,"jay_lib::fns::fn_net"],[19,"jay_lib::fns::fn_str"]],"d":["A method of config To me, OnceCell is a good tool for …","Command functions.","and it can be a source from what?","Ordering temporary place.","Often, it can be a database url or file.","Open file get fields which is used. written to only once …","Command Sqlite3 functions","Command Io functions.","Command network functions","Command string functions.","Create or open sqlite3 database, open if it exist, create …","It execute a sql sentence","It batch execute a sql.","Read string from file. Example:","get a file name from today. Often use for temporary file.","get a file name from now. it is year month day hour and …","Writen a String to a file.","writen <code>Vec&lt;String&gt;</code> to a temporary file. It to check …","Get Local Ip Address. 千万不要去用哪个local-ip, …","First char of first word to Capitalize / But return is …","First char of first word to Capitalize A mnemonic node","Check the string is or not English But, if it is a phrase. …","Check the string has Chinese. Example:","Command get middle subject str. Example:","It is get first word form str. Just a mnemonic node to …","Got middle substrings from string to <code>Vec&lt;String&gt;</code> Example:","Command get middle subject str. Example:","0.1.2.3.4.5.6.7.8.9 Example","It is get last word form str. Just to remember it. Example:","<code>Vec&lt;u8&gt;</code> to <code>Vec&lt;char&gt;</code> A mnemonic node","convert a number into a binary number string like “…","<code>Vec&lt;u8&gt;</code> to String A mnemonic node"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,[[],[[3,[[2,[1]]]]]],0,0,0,0,[[[5,[4]]],[[7,[6]]]],[[6,[5,[4]]],7],[[6,[5,[4]]],7],[[[5,[4]]],[[3,[8,[2,[1]]]]]],[[],8],[[],8],[8,9],[[[10,[8]]],9],[[],[[11,[8]]]],[4,[[12,[4]]]],[4,8],[13,14],[8,14],[[[5,[4]],[5,[4]],[5,[4]]],[[3,[8,[2,[1]]]]]],[[[5,[4]]],[[11,[8]]]],[[[5,[4]],[5,[4]],[5,[4]]],[[11,[[10,[8]]]]]],[[[5,[4]],[5,[4]],[5,[4]]],[[3,[8,[2,[1]]]]]],[8,14],[[[5,[4]]],[[11,[8]]]],[[[10,[15]]],[[10,[16]]]],[17,8],[[[10,[15]]],8]],"c":[],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[15,"str"],[8,"AsRef"],[3,"Connection"],[6,"Result"],[3,"String"],[6,"Result"],[3,"Vec"],[4,"Option"],[4,"Cow"],[8,"ToString"],[15,"bool"],[15,"u8"],[15,"char"],[8,"Binary"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
